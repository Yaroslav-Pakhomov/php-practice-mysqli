<?php

declare(strict_types=1);

// включение вывод всех ошибок
error_reporting(E_ALL);
ini_set('display_errors', 'on');

// выключение вывод всех ошибок
// error_reporting(0);
// ini_set('display_errors', 'off');

// Кодировка
mb_internal_encoding('UTF-8');

// Работа с timestamp
// Функция time возвращает текущий момент времени в формате timestamp. Формат timestamp - это количество секунд, прошедшее с 1-го января 1970 года по заданный момент времени time();
// Функция mktime переводит заданную дату в формат timestamp. Формат timestamp - это количество секунд, прошедшее с 1-го января 1970 года по заданный момент времени mktime(часы, минуты, секунды, месяц, день, год);

// Функция date
// Функция date выводит дату в заданном формате. Первым параметром функция принимает формат, а вторым необязательным параметром - момент времени в формате timestamp. Если второй параметр не указан - возьмется текущий момент времени, если указан - то заданный.
// Формат задается управляющими командами (английскими буквами), при этом можно вставлять любые разделители между ними (дефисы, двоеточие и так далее).
// Функция принимает следующие команды (заглавные буквы отличаются от обычных, обратите внимание):
// U – количество секунд, прошедших с 1 января 1970 года (то есть timestamp).
// z – номер дня от начала года.
// Y – год, 4 цифры.
// y - год, две цифры.
// m – номер месяца (с нулем спереди).
// n – номер месяца без нуля впереди.
// d – номер дня в месяце, всегда две цифры (то есть первая может быть нулем).
// j – номер дня в месяце без предваряющего нуля.
// w – день недели (0 - воскресенье, 1 - понедельник и т.д.).
// h – часы в 12-часовом формате.
// H – часы в 24-часовом формате.
// i – минуты.
// s – секунды.
// L – 1, если високосный год, 0, если не високосный.
// W – порядковый номер недели года.
// t – количество дней в указанном месяце.
// date(формат, [момент времени в формате timestamp]);

// Функция strtotime
// Функция strtotime преобразует произвольную дату в формат timestamp. Формат timestamp - это количество секунд, прошедшее с 1-го января 1970 года по заданный момент времени strtotime('дд-мм-гггг');

// Прибавление и отнимание дат
// Функция date_create создает объект 'дата', с которым в дальнейшем можно выполнять некоторые операции. К примеру, прибавить или отнять промежуток от даты с помощью date_modify или вывести дату в другом формате с помощью функции date_format date_create([дата]);
// Функция date_modify позволяет прибавлять и отнимать от даты определенные промежутки времени. Дата при этом должна быть объектом, созданным функцией date_create. Функция изменяет сам переданный объект, и возвращает также измененный объект 'дата' date_modify(объект 'дата', что прибавить или отнять);
// Функция date_format выводит данные из объекта 'дата' в определенном формате. Дата при этом должна быть объектом, созданным функцией date_create. Управляющие команды для формата такие же, как в функции date date_create(объект 'дата', формат вывода);


// Работа с timestamp
// Функция time возвращает текущий момент времени в формате timestamp. Формат timestamp - это количество секунд, прошедшее с 1-го января 1970 года по заданный момент времени time();
// Функция mktime переводит заданную дату в формат timestamp. Формат timestamp - это количество секунд, прошедшее с 1-го января 1970 года по заданный момент времени mktime(часы, минуты, секунды, месяц, день, год);

echo time();
echo "<br>";
echo mktime(00, 00, 00, 3, 1, 25);
echo "<br>";
echo mktime(00, 00, 00, 12, 31, 22);
echo "<br>";
echo mktime(13, 12, 59, 3, 15, 2000);
echo "<br>";
echo "<br>";
echo time() - mktime(7, 23, 48, 7, 13, 2022);
echo "<br>";
echo "<br>";
echo "<br>";

// Функция date
// Функция date выводит дату в заданном формате. Первым параметром функция принимает формат, а вторым необязательным параметром - момент времени в формате timestamp. Если второй параметр не указан - возьмется текущий момент времени, если указан - то заданный.
// Формат задается управляющими командами (английскими буквами), при этом можно вставлять любые разделители между ними (дефисы, двоеточие и так далее).
// Функция принимает следующие команды (заглавные буквы отличаются от обычных, обратите внимание):
// U – количество секунд, прошедших с 1 января 1970 года (то есть timestamp).
// z – номер дня от начала года.
// Y – год, 4 цифры.
// y - год, две цифры.
// m – номер месяца (с нулем спереди).
// n – номер месяца без нуля впереди.
// d – номер дня в месяце, всегда две цифры (то есть первая может быть нулем).
// j – номер дня в месяце без предваряющего нуля.
// w – день недели (0 - воскресенье, 1 - понедельник и т.д.).
// h – часы в 12-часовом формате.
// H – часы в 24-часовом формате.
// i – минуты.
// s – секунды.
// L – 1, если високосный год, 0, если не високосный.
// W – порядковый номер недели года.
// t – количество дней в указанном месяце.
// date(формат, [момент времени в формате timestamp]);

// Вывод времени с учётом часового пояса в PHP
date_default_timezone_set("UTC"); // Устанавливаем часовой пояс по Гринвичу
$time = time(); // Вот это значение отправляем в базу
$offset = 5; // Допустим, у пользователя смещение относительно Гринвича составляет +3 часа
$time += 5 * 3600; // Добавляем 3 часа к времени по Гринвичу

// Все примеры показаны для даты 01.06.2013 в 12.23.59, понедельник
echo date('Y') . ' - год <br>'; // выведет '2013'
echo date('y') . ' - год <br>'; // выведет '13'
echo date('m') . ' - номер месяца <br>'; // выведет '06' - номер месяца
echo date('n') . ' - номер месяца без ведущего нуля <br>'; // выведет '06' - номер месяца
echo date('d') . ' - номер дня в месяце<br>'; // выведет '01' - номер дня в месяце
echo date('j') . ' - номер дня в месяце (без нуля спереди)<br>'; // выведет '1' - номер дня в месяце (без нуля спереди)
echo date('w') . ' - день недели, 1 - понедельник и т.д.<br>'; // выведет '1' - понедельник
echo date('H', $time) . ' - часы<br>'; // выведет '12' - часы
echo date('i') . ' - минуты<br>'; // выведет '23' - минуты
echo date('s') . ' - секунды<br><br>'; // выведет '59' - секунды

echo date('d-m-Y') . '<br>'; // выведет '01-06-2013'
echo date('d.m.Y') . '<br>'; // выведет '01.06.2013'
echo date('H:i:s d.m.Y', $time) . '<br><br>'; // выведет '12:23:59 01.06.2013', Выводим время пользователя, согласно его часовому поясу

// Узнаем какой день недели был 29-12-2013:
echo 'Узнаем какой день недели был 29-12-2013: ';
echo date('w', mktime(0, 0, 0, 12, 29, 13)) . ' - воскресенье.<br><br>'; // выведет '0' - воскресенье

echo date('H:i:s d.m.Y', $time);
echo "<br>";
echo date('Y-m-d', $time);
echo "<br>";
echo date('d.m.Y', $time);
echo "<br>";
echo date('d.m.y', $time);
echo "<br>";
echo date('H:i:s', $time);
echo "<br>";
echo "<br>";
$time = mktime(00, 00, 00, 2, 12, 25); // переводим в секунды дату
echo "<br>";
echo date('d.m.Y', $time); // переводим дату в формат дд.мм.гггг
echo "<br>";
echo "<br>";
echo "<br>";
$week = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];
echo $week[date('w')]; // выводим текущий день недели с помощью созданного массива $week
echo "<br>";
$time = mktime(00, 00, 00, 6, 6, 2006); // переводим дату в секунды
echo $week[date('w', $time)]; // находим день недели этой даты помощью массива $week
echo "<br>";
$months = [
    'январь',
    'февраль',
    'март',
    'апрель',
    'май',
    'июнь',
    'июль',
    'август',
    'сентябрь',
    'октябрь',
    'ноябрь',
    'декабрь',
];
echo "<br>";
echo $months[date('n')];
echo "<br>";
echo "<br>";
$number = cal_days_in_month(CAL_GREGORIAN, (int)date('n'), (int)date('Y')); // 31
echo 'Всего ' . $number . ' день/дней в ' . $months[date('n')] . ' ' . date('Y') . ' года.';
echo "<br>";
echo "<br>";
echo "<br>";

// Функция strtotime
// Функция strtotime преобразует произвольную дату в формат timestamp. Формат timestamp - это количество секунд, прошедшее с 1-го января 1970 года по заданный момент времени strtotime(дата);
echo strtotime('2025-12-31'); //  выполнения кода: 1767128400
echo "<br>";
echo strtotime('10 September 2000'); // выполнения кода: 968529600
echo "<br>";
echo "<br>";
$seconds = strtotime('2025-12-31');
echo date('d - m - Y', (int)$seconds);
echo "<br>";
echo "<br>";
echo "<br>";

// Прибавление и отнимание дат
// Функция date_create создает объект 'дата', с которым в дальнейшем можно выполнять некоторые операции. К примеру, прибавить или отнять промежуток от даты с помощью date_modify или вывести дату в другом формате с помощью функции date_format date_create([дата]);
// Функция date_modify позволяет прибавлять и отнимать от даты определенные промежутки времени. Дата при этом должна быть объектом, созданным функцией date_create. Функция изменяет сам переданный объект, и возвращает также измененный объект 'дата' date_modify(объект 'дата', что прибавить или отнять);
// Функция date_format выводит данные из объекта 'дата' в определенном формате. Дата при этом должна быть объектом, созданным функцией date_create. Управляющие команды для формата такие же, как в функции date date_create(объект 'дата', формат вывода);


$date = date_create('2025-12-31'); // объект с датой за 2025 год, 12 месяц, 31 день
echo date_format($date, 'Y-m-d');
echo "<br>";
date_modify($date, '1 day'); // прибавили 1 день к $date
echo date_format($date, 'd.m.Y'); // Вывод в формате 'день. месяц. год'
echo "<br>";
echo "<br>";
$date = date_create('2025-12-31'); // создадим объект с датой за 2025 год, 12 месяц, 31 день
date_modify($date, ' - 3 days - 1 month'); // отнимем от неё 3 дня и 1 месяц
echo date_format($date, 'd . m . Y'); // Выведем в формате 'день. месяц. год'
echo "<br>";
echo "<br>";
$date = date_create('2025-12-31');
date_modify($date, '2 days 1 month');
date_modify($date, '3 days 1 year');
date_modify($date, ' - 3 days');
echo date_format($date, 'd . m . Y');
echo "<br>";
echo "<br>";
echo "<br>";
echo "<br>";
echo "<br>";

//Практика
// Сколько дней осталось до Нового Года.
//сколькоДнейОсталосьДоНовогоГода();
echo "<br>";
echo "<br>";

// Узнайте какой день недели был 100 дней назад.
$date = date_create(date('d.m.Y'));
date_modify($date, '- 100 days');
echo date_format($date, "d.m.Y l") . ' - день недели, который был 100 дней назад';
echo "<br>";
echo "<br>";
echo "<br>";

// Найдите все пятницы 13-е в указанном году.
function getFridayThirteen(int|string $year): array {
    $arrFridayThirteen = [];
    for ($n = 1; $n <= 12; $n++) {
        $time = mktime(0, 0, 0, $n, 13, (int)$year);

        if ((int)date('w', $time) === 5) {
            $arrFridayThirteen[] = date('d.m.Y - l', $time);
        }
    }
    return $arrFridayThirteen;
}

echo '<pre>';
print_r(getFridayThirteen(2023));
echo '</pre>';
echo "<br>";
echo "<br>";
echo "<br>";


echo "<br>";
echo "<br>";
echo "<br>";


echo "<br>";
echo "<br>";
echo "<br>";


